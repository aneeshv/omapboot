/*
* Copyright (C) 2012 Texas Instruments, Inc.
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
*  * Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
*  * Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in
*    the documentation and/or other materials provided with the
*    distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
* FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
* COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
* OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
* AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
* SUCH DAMAGE.
*/

#ifndef _CLOCK_H_
#define _CLOCK_H_

#define MODULE_CLKCTRL_IDLEST_TRANSITIONING     1
#define MODULE_CLKCTRL_IDLEST_IDLE              2
#define MODULE_CLKCTRL_IDLEST_DISABLED          3
#define MODULE_CLKCTRL_IDLEST_SHIFT             16
#define MODULE_CLKCTRL_IDLEST_MASK              (3 << 16)

#define WRITEL 0
#define MODIFY 1
#define MODIFY_WAIT 2

#define CLKTRCTRL_NO_SLEEP	0x00000001
#define GPIO_CTRL_FIELD_MASK	0x00000100
#define L3INIT_CTRL_FIELD_MASK	0x01000000
#define CLKTRCTRL_SW_WKUP	0x00000002
#define CLKTRCTRL_HW_AUTO	0x00000003
#define CLKTRCTRL_FIELD_MASK	0x00000003

struct omap_clocks {
	u32 ctrl;
	u32 ad;
	u32 mask;
	u32 value;
};

static struct omap_clocks omap5_clocks[] = {
	{WRITEL, CM_L4PER_GPIO4_CLKCTRL, GPIO_CTRL_FIELD_MASK, 0},
	{WRITEL, CM_L3INIT_HSMMC1_CLKCTRL, L3INIT_CTRL_FIELD_MASK, 0},
	{WRITEL, CM_L3INIT_HSMMC2_CLKCTRL, L3INIT_CTRL_FIELD_MASK, 0},
	{WRITEL, CM_WKUP_GPTIMER1_CLKCTRL, L3INIT_CTRL_FIELD_MASK, 0},
	{MODIFY, CM_L4PER_CLKSTCTRL, CLKTRCTRL_FIELD_MASK, CLKTRCTRL_SW_WKUP},
	{MODIFY, CM_L3INIT_CLKSTCTRL, CLKTRCTRL_FIELD_MASK, CLKTRCTRL_SW_WKUP},
	{MODIFY, CM_MEMIF_CLKSTCTRL, CLKTRCTRL_FIELD_MASK, CLKTRCTRL_SW_WKUP},
	{MODIFY, CM_L4CFG_CLKSTCTRL, CLKTRCTRL_FIELD_MASK, CLKTRCTRL_SW_WKUP},
	{MODIFY_WAIT, CM_MEMIF_EMIF_1_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_NO_SLEEP},
	{MODIFY_WAIT, CM_MEMIF_EMIF_2_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_NO_SLEEP},
	{MODIFY_WAIT, CM_L4CFG_L4_CFG_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_NO_SLEEP},
	{MODIFY_WAIT, CM_WKUP_GPIO1_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_NO_SLEEP},
	{MODIFY_WAIT, CM_L4PER_GPIO2_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_NO_SLEEP},
	{MODIFY_WAIT, CM_L4PER_GPIO3_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_NO_SLEEP},
	{MODIFY_WAIT, CM_L4PER_GPIO4_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_NO_SLEEP},
	{MODIFY_WAIT, CM_L4PER_GPIO5_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_NO_SLEEP},
	{MODIFY_WAIT, CM_L4PER_GPIO6_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_NO_SLEEP},
	/* do_enable_clocks(1) passed early module setup */
	{MODIFY_WAIT, CM_WKUP_GPTIMER1_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_SW_WKUP},
	{MODIFY_WAIT, CM_L3INIT_HSMMC1_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_SW_WKUP},
	{MODIFY_WAIT, CM_L3INIT_HSMMC2_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_SW_WKUP},
	{MODIFY_WAIT, CM_L4PER_GPTIMER2_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_SW_WKUP},
	{MODIFY_WAIT, CM_WKUP_WDTIMER2_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_SW_WKUP},
	{MODIFY_WAIT, CM_L4PER_UART3_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_SW_WKUP},
	{MODIFY_WAIT, CM_L4PER_I2C1_CLKCTRL, CLKTRCTRL_FIELD_MASK,
							CLKTRCTRL_SW_WKUP},
	/* do_enable_clocks(1) passed late module setup */

	{MODIFY, CM_L4PER_CLKSTCTRL, CLKTRCTRL_FIELD_MASK, CLKTRCTRL_HW_AUTO},
	{MODIFY, CM_L3INIT_CLKSTCTRL, CLKTRCTRL_FIELD_MASK, CLKTRCTRL_HW_AUTO},
	{MODIFY, CM_MEMIF_CLKSTCTRL, CLKTRCTRL_FIELD_MASK, CLKTRCTRL_HW_AUTO},
	{MODIFY, CM_L4CFG_CLKSTCTRL, CLKTRCTRL_FIELD_MASK, CLKTRCTRL_HW_AUTO},
	{0,0,0,0},
	/* do_enable_clocks(1) passed late domain setup */
};
#endif
